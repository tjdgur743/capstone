import numpy, socket, time, base64, cv2, pickle, struct
#from imutils.video import VideoStream

# Bluetooth server for PC
'''server_socket=socket.socket(socket.AF_BLUETOOTH, socket.SOCK_STREAM, socket.BTPROTO_RFCOMM)
address='e4:5f:01:9e:52:d0'
port=1'''
server_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

def bind():
    port=9000
    address='192.168.137.177' # Direct connectioj
    #address='192.168.29.2' # Wifi connection
    server_socket.bind((address, port))
    server_socket.listen() # Be ready to get incoming connection requests
    PC, _=server_socket.accept() # Accept the client socket
    print(f"Socket bound")
    return PC
#picam = VideoStream(usePiCamera=True).start()
cam=cv2.VideoCapture(0)
cam.set(cv2.CAP_PROP_FRAME_WIDTH, 640)
cam.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)
#time.sleep(1)
print('camera ready')
PC = bind()


while 1:
    _, image=cam.read()
    result, image = cv2.imencode('.jpg', image)
    image=pickle.dumps(image)
    image=struct.pack(">L", len(image)) + image
    try:
        PC.send(image)
        PC.recv(1) # Receive echo from PC
    except:
        PC, _=server_socket.accept()
        print('Socket reconnected')
